package client.gui.swing.panels;

import client.gui.swing.SwingGUIController;
import client.gui.swing.panels.testcontrolers.TestGameMenuController;
import client.presenter.controller.messages.LoginMessage;
import java.awt.BorderLayout;
import java.awt.FlowLayout;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.security.NoSuchAlgorithmException;
import javax.swing.JButton;
import javax.swing.JComponent;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JPasswordField;
import javax.swing.JTextField;
import javax.swing.SwingUtilities;

public class LoginPanel extends JPanel {

  private JButton Login;
  private JButton newAccountButton;
  private JTextField emailTextField;
  private JPasswordField passwordField;
  private JPanel LoginPanel;

  private SwingGUIController controller;


  LoginPanel(SwingGUIController controller) {
    super();
    this.controller = controller;
    this.add(LoginPanel);

    Login.addActionListener(new ActionListener() {
      @Override
      public void actionPerformed(ActionEvent e) {
        String email = emailTextField.getText();
        String password = new String(passwordField.getPassword());
        if (email.isEmpty() || password.isEmpty()) {

          JOptionPane.showMessageDialog(LoginPanel,
              "You must enter values for the Email and Password fields");

          return;
        }
        try {
          LoginMessage message = new LoginMessage(email, password);
          controller.sendMessage(message);

        } catch (NoSuchAlgorithmException e1) {
          System.err.println("The computer does not have SHA1 algorithm");
        }

      }
    });
    newAccountButton.addActionListener(new ActionListener() {
      @Override
      public void actionPerformed(ActionEvent e) {
        controller.actionPerformed(e);
      }
    });
  }

  // For Testing


  public static void main(String[] args) {

    //Schedule a job for the event-dispatching thread:
    //creating and showing this application's GUI.
    SwingUtilities.invokeLater(new Runnable() {
      public void run() {
        createAndShowGUI();
      }
    });
  }

  /**
   * Create the GUI and show it.  For thread safety, this method should be invoked from the
   * event-dispatching thread.
   */
  private static void createAndShowGUI() {
    //Create and set up the window.
    JFrame frame = new JFrame("Login Panel Test");
    frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);

    //Create and set up the content pane.
    LoginPanel demo = new LoginPanel(new TestGameMenuController());
    frame.add(demo.LoginPanel);

    //Display the window.
    frame.pack();
    frame.setVisible(true);
  }

  {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
    $$$setupUI$$$();
  }

  /**
   * Method generated by IntelliJ IDEA GUI Designer >>> IMPORTANT!! <<< DO NOT edit this method OR
   * call it in your code!
   *
   * @noinspection ALL
   */
  private void $$$setupUI$$$() {
    LoginPanel = new JPanel();
    LoginPanel.setLayout(new BorderLayout(0, 0));
    final JPanel panel1 = new JPanel();
    panel1.setLayout(new BorderLayout(0, 0));
    LoginPanel.add(panel1, BorderLayout.CENTER);
    final JPanel panel2 = new JPanel();
    panel2.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5));
    panel1.add(panel2, BorderLayout.SOUTH);
    Login = new JButton();
    Login.setText("Login");
    panel2.add(Login);
    newAccountButton = new JButton();
    newAccountButton.setText("New Account");
    panel2.add(newAccountButton);
    final JPanel panel3 = new JPanel();
    panel3.setLayout(new BorderLayout(0, 0));
    panel1.add(panel3, BorderLayout.CENTER);
    final JPanel panel4 = new JPanel();
    panel4.setLayout(new GridBagLayout());
    panel3.add(panel4, BorderLayout.NORTH);
    final JLabel label1 = new JLabel();
    label1.setText("Account Email ");
    label1.putClientProperty("html.disable", Boolean.FALSE);
    GridBagConstraints gbc;
    gbc = new GridBagConstraints();
    gbc.gridx = 1;
    gbc.gridy = 1;
    gbc.anchor = GridBagConstraints.WEST;
    panel4.add(label1, gbc);
    emailTextField = new JTextField();
    emailTextField.setColumns(30);
    emailTextField.setVerifyInputWhenFocusTarget(true);
    gbc = new GridBagConstraints();
    gbc.gridx = 3;
    gbc.gridy = 1;
    panel4.add(emailTextField, gbc);
    passwordField = new JPasswordField();
    passwordField.setColumns(30);
    gbc = new GridBagConstraints();
    gbc.gridx = 3;
    gbc.gridy = 2;
    panel4.add(passwordField, gbc);
    final JLabel label2 = new JLabel();
    label2.setText("Password");
    label2.putClientProperty("html.disable", Boolean.FALSE);
    gbc = new GridBagConstraints();
    gbc.gridx = 1;
    gbc.gridy = 2;
    gbc.anchor = GridBagConstraints.WEST;
    panel4.add(label2, gbc);
    final JPanel spacer1 = new JPanel();
    gbc = new GridBagConstraints();
    gbc.gridx = 2;
    gbc.gridy = 1;
    gbc.fill = GridBagConstraints.VERTICAL;
    panel4.add(spacer1, gbc);
    final JPanel spacer2 = new JPanel();
    gbc = new GridBagConstraints();
    gbc.gridx = 3;
    gbc.gridy = 0;
    gbc.fill = GridBagConstraints.VERTICAL;
    panel4.add(spacer2, gbc);
    final JPanel spacer3 = new JPanel();
    gbc = new GridBagConstraints();
    gbc.gridx = 3;
    gbc.gridy = 3;
    gbc.fill = GridBagConstraints.VERTICAL;
    panel4.add(spacer3, gbc);
    final JPanel spacer4 = new JPanel();
    gbc = new GridBagConstraints();
    gbc.gridx = 4;
    gbc.gridy = 1;
    gbc.fill = GridBagConstraints.HORIZONTAL;
    panel4.add(spacer4, gbc);
    final JPanel spacer5 = new JPanel();
    gbc = new GridBagConstraints();
    gbc.gridx = 0;
    gbc.gridy = 1;
    gbc.fill = GridBagConstraints.HORIZONTAL;
    panel4.add(spacer5, gbc);
  }

  /**
   * @noinspection ALL
   */
  public JComponent $$$getRootComponent$$$() {
    return LoginPanel;
  }
}
