package edu.colostate.cs.cs414.warewolves.chad.client.gui.swing.panels;

import edu.colostate.cs.cs414.warewolves.chad.client.gui.swing.SwingGUIController;
import edu.colostate.cs.cs414.warewolves.chad.client.presenter.controller.messages.RegisterMessage;
import java.awt.BorderLayout;
import java.awt.FlowLayout;
import java.awt.Font;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.security.NoSuchAlgorithmException;
import javax.swing.JButton;
import javax.swing.JComponent;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JPasswordField;
import javax.swing.JTextField;

/**
 * Panel for creating an new account. It asks the user for a email address, nickname, and password.
 */
public class RegisterNewAccountPanel extends JPanel {

  /**
   * Main panel for the class
   */
  private JPanel newAccountPanel;
  /**
   * Text field for users nickname
   */
  private JTextField nicknameField;
  /**
   * Text field for users email
   */
  private JTextField emailField;
  /**
   * Text field for users password
   */
  private JPasswordField passwordField;
  /**
   * Button to register new account
   */
  private JButton registerAccount;
  /**
   * Button to go back to login screen
   */
  private JButton cancelRegister;

  /**
   * Creates the GUI elements and sets the panels controller for ActionListeners
   *
   * @param controller the controller of the panel
   */
  public RegisterNewAccountPanel(SwingGUIController controller) {
    this.add(newAccountPanel);
    // Setup register button
    registerAccount.addActionListener(new ActionListener() {
      @Override
      public void actionPerformed(ActionEvent e) {
        // Get user info
        String email = emailField.getText();
        String nickname = nicknameField.getText();
        String password = new String(passwordField.getPassword());
        // All fields must have data
        if (email.isEmpty() || password.isEmpty() || nickname.isEmpty()) {
          JOptionPane.showMessageDialog(newAccountPanel,
              "You must enter values in the Email, Nickname, and Password fields");
          return;
        }

        try {
          // Send new registration request
          RegisterMessage message = new RegisterMessage(email, password, nickname);
          passwordField.setText(""); // clear password
          controller.sendMessage(message);

        } catch (NoSuchAlgorithmException e1) {
          System.err.println("The computer does not have SHA1 algorithm");
        }

      }
    });

    // Setup cancel new account button
    cancelRegister.addActionListener(new ActionListener() {
      @Override
      public void actionPerformed(ActionEvent e) {
        // tell controller to switch to new login panel
        controller.actionPerformed(e);
      }
    });
  }

  /**
   * @noinspection ALL
   */
  private Font $$$getFont$$$(String fontName, int style, int size, Font currentFont) {
    if (currentFont == null) {
      return null;
    }
    String resultName;
    if (fontName == null) {
      resultName = currentFont.getName();
    } else {
      Font testFont = new Font(fontName, Font.PLAIN, 10);
      if (testFont.canDisplay('a') && testFont.canDisplay('1')) {
        resultName = fontName;
      } else {
        resultName = currentFont.getName();
      }
    }
    return new Font(resultName, style >= 0 ? style : currentFont.getStyle(),
        size >= 0 ? size : currentFont.getSize());
  }

  {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
    $$$setupUI$$$();
  }

  /**
   * Method generated by IntelliJ IDEA GUI Designer >>> IMPORTANT!! <<< DO NOT edit this method OR
   * call it in your code!
   *
   * @noinspection ALL
   */
  private void $$$setupUI$$$() {
    newAccountPanel = new JPanel();
    newAccountPanel.setLayout(new BorderLayout(0, 0));
    final JPanel panel1 = new JPanel();
    panel1.setLayout(new BorderLayout(0, 0));
    newAccountPanel.add(panel1, BorderLayout.CENTER);
    final JPanel panel2 = new JPanel();
    panel2.setLayout(new GridBagLayout());
    panel1.add(panel2, BorderLayout.CENTER);
    final JLabel label1 = new JLabel();
    label1.setText("Account Nickname");
    GridBagConstraints gbc;
    gbc = new GridBagConstraints();
    gbc.gridx = 1;
    gbc.gridy = 2;
    gbc.anchor = GridBagConstraints.WEST;
    panel2.add(label1, gbc);
    nicknameField = new JTextField();
    nicknameField.setColumns(30);
    gbc = new GridBagConstraints();
    gbc.gridx = 3;
    gbc.gridy = 2;
    gbc.anchor = GridBagConstraints.WEST;
    gbc.fill = GridBagConstraints.HORIZONTAL;
    panel2.add(nicknameField, gbc);
    final JPanel spacer1 = new JPanel();
    gbc = new GridBagConstraints();
    gbc.gridx = 2;
    gbc.gridy = 2;
    gbc.fill = GridBagConstraints.HORIZONTAL;
    panel2.add(spacer1, gbc);
    final JLabel label2 = new JLabel();
    label2.setText("Account Email ");
    label2.putClientProperty("html.disable", Boolean.FALSE);
    gbc = new GridBagConstraints();
    gbc.gridx = 1;
    gbc.gridy = 1;
    gbc.anchor = GridBagConstraints.WEST;
    panel2.add(label2, gbc);
    emailField = new JTextField();
    emailField.setColumns(30);
    emailField.setVerifyInputWhenFocusTarget(true);
    gbc = new GridBagConstraints();
    gbc.gridx = 3;
    gbc.gridy = 1;
    panel2.add(emailField, gbc);
    final JLabel label3 = new JLabel();
    label3.setText("Password");
    label3.putClientProperty("html.disable", Boolean.FALSE);
    gbc = new GridBagConstraints();
    gbc.gridx = 1;
    gbc.gridy = 3;
    gbc.anchor = GridBagConstraints.WEST;
    panel2.add(label3, gbc);
    passwordField = new JPasswordField();
    passwordField.setColumns(30);
    gbc = new GridBagConstraints();
    gbc.gridx = 3;
    gbc.gridy = 3;
    panel2.add(passwordField, gbc);
    final JPanel spacer2 = new JPanel();
    gbc = new GridBagConstraints();
    gbc.gridx = 4;
    gbc.gridy = 1;
    gbc.fill = GridBagConstraints.HORIZONTAL;
    panel2.add(spacer2, gbc);
    final JPanel spacer3 = new JPanel();
    gbc = new GridBagConstraints();
    gbc.gridx = 0;
    gbc.gridy = 2;
    gbc.fill = GridBagConstraints.HORIZONTAL;
    panel2.add(spacer3, gbc);
    final JPanel spacer4 = new JPanel();
    gbc = new GridBagConstraints();
    gbc.gridx = 3;
    gbc.gridy = 0;
    gbc.fill = GridBagConstraints.VERTICAL;
    panel2.add(spacer4, gbc);
    final JPanel spacer5 = new JPanel();
    gbc = new GridBagConstraints();
    gbc.gridx = 3;
    gbc.gridy = 4;
    gbc.fill = GridBagConstraints.VERTICAL;
    panel2.add(spacer5, gbc);
    final JPanel panel3 = new JPanel();
    panel3.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5));
    newAccountPanel.add(panel3, BorderLayout.SOUTH);
    registerAccount = new JButton();
    registerAccount.setActionCommand("register Account");
    registerAccount.setText("Register Account");
    panel3.add(registerAccount);
    cancelRegister = new JButton();
    cancelRegister.setActionCommand("Login Screen");
    cancelRegister.setText("Cancel");
    panel3.add(cancelRegister);
  }

  /**
   * @noinspection ALL
   */
  public JComponent $$$getRootComponent$$$() {
    return newAccountPanel;
  }
}


